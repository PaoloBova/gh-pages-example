# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/10_analysis_dsair.ipynb.

# %% auto 0
__all__ = ['b', 'c', 'B', 'W', 'β', 'Z', 'S', 'gamma', 'models', 'results', 'flat_results', 'df', 'fig1_data']

# %% ../nbs/10_analysis_dsair.ipynb 2
from .conditions import *
from .methods import *
from .payoffs import *
from .types import *
from .utils import *

import typing

import fastcore.test
import matplotlib as mpl
import matplotlib.pyplot as plt
from nbdev.showdoc import *
import nptyping
import numpy as np
import pandas
import seaborn as sns 

# %% ../nbs/10_analysis_dsair.ipynb 6
def fig1_data(b=4, c=1, B=10**4, W=100, β=0.01, Z=100, S=['A','B'], gamma=1):
    """Create parameter grid for the baseline DSAIR model, Figure 1,
    The Anh et al. 2020."""
    namesofvalues=['s','b','c','p','B','W','β','gamma']
    matchingvalues = np.array([[s,b,c,p,B,W,β,gamma]
                               for s in np.arange(1,5.1,0.1)
                               for p in np.arange(0,1.02,0.02)])
    models = {k:v for k, v in zip(namesofvalues, matchingvalues.T)}
    models = {**models,
              'Z':Z, # Z should be a scalar
              'strategy_set':S # S should be a list of strings
             }
    return models

# %% ../nbs/10_analysis_dsair.ipynb 7
b=4; c=1; B=10**4; W=100; β=0.1; Z=100; S=["AS", "AU"]; gamma=1
models = fig1_data(b=b, c=c, B=B, W=W, β=β, Z=Z, S=S, gamma=1)

# %% ../nbs/10_analysis_dsair.ipynb 9
results = thread_macro(models,
                       payoffs_sr,
                       payoffs_lr,
                       threshold_society_prefers_safety_dsair,
                       threshold_risk_dominant_safety_dsair,
                       markov_chain,
                      )

# %% ../nbs/10_analysis_dsair.ipynb 13
flat_results = {k:results[k] for k in ['s','b','c','p','B','W','β']}
flat_results['pr'] = np.round(1 - flat_results['p'], 2)
flat_results['s'] = np.round(flat_results['s'], 2)
for i, strategy in enumerate(["AS", "AU"]):
    flat_results[strategy + "_frequency"] = results['ergodic'][:,i]
    
df = pandas.DataFrame(flat_results)

# %% ../nbs/10_analysis_dsair.ipynb 14
df
