# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/types.ipynb.

# %% auto 0
__all__ = ['Array1D', 'Array2D', 'Array3D']

# %% ../nbs/types.ipynb 2
import typing
import nptyping

# %% ../nbs/types.ipynb 3
class Array1D():
    """An alias for a 1D numpy array."""
    def __init__(self,
                 ModelVector: nptyping.NDArray[nptyping.Shape["N_models"], typing.Any] # A 1D numpy array suitable for stacks of scalar parameter values
                ):
        pass

# %% ../nbs/types.ipynb 4
class Array2D():
    """An alias for a 2D numpy array."""
    def __init__(self,
                Model2DArray: nptyping.NDArray[nptyping.Shape["N_models, N_states"], typing.Any], # A 2D numpy array suitable for stacks of state vectors
                ):
        pass

# %% ../nbs/types.ipynb 5
class Array3D():
    """An alias for 3D numpy array, last two dimensions of equal size."""
    def __init__(self,
                Model3DArray: nptyping.NDArray[nptyping.Shape["N_models, N_strategies, N_strategies"], typing.Any] # A 3D numpy array suitable for stacks of payoff or transition matrices 
                ):
        pass
